<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClients.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>